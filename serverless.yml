service:
  name: chee
  awsKmsKeyArn: arn:aws:kms:us-east-1:710390882138:key/bbbc300d-ac65-4e10-a4d8-4ae43008ae13

package:
  include:
    - lib/**
    - data/**
  exclude:
    - README.md
    - Makefile
    - LICENSE

custom:
  creds: ${file(./config.yml)}
  bucket: chee
  dynamodb:
    start:
      inMemory: true
      migrate: true
  serverless-offline:
    port: 4000

provider:
  name: aws
  memory: 128
  runtime: nodejs6.10
  timeout: 3
  stage: dev
  profile: serverless
  environment:
    SLACK_CLIENT_ID: ${self:custom.creds.slack_client_id}
    SLACK_CLIENT_SECRET: ${self:custom.creds.slack_client_secret}
    SLACK_VERIFICATION_TOKEN: ${self:custom.creds.slack_verification_token}
    MASHAPE_API_KEY: ${self:custom.creds.mashape_api_key}
    DYNAMODB_USER_TABLE: users
    DYNAMODB_SCORE_TABLE: scores
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - "arn:aws:s3:::${self:custom.bucket}/*"
        - "arn:aws:s3:::${self:custom.bucket}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"

functions:
  ccl:
    handler: lib/ccl/get.do
    name: ${self:provider.stage}-ccl
    description: Too many ccliters gifs
    events:
        - http:
            path: ccl
            method: post
  plus:
    handler: lib/score/score.plus
    name: ${self:provider.stage}-score-plus
    description: ++ a thing
    events:
        - http:
            path: score/plus
            method: post
  minus:
    handler: lib/score/score.minus
    name: ${self:provider.stage}-score-minus
    description: -- a thing
    events:
        - http:
            path: score/minus
            method: post

resources:
  Resources:
    users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    scores:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: scores
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: date
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: date
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-dynamodb-local
  - serverless-offline
